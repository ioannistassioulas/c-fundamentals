----------------------------------------------------------------------------
  definition:         rewrite: 
----------------------------------------------------------------------------
  int x[8];           x[4]            

pointer notation:  *(x + 4);
       semantics:  x + 4 points to the location of the 4th int beyond x.
                   That element is reached using the dereference operator (*)

----------------------------------------------------------------------------
  int x[8];           x[2] = x[3];

pointer notation:  *(x + 2) = *(x + 3);
       semantics:  set the data located in the second int after x to be
                   equal to the data located in the third int after x.
                   These locations are reached by dereferencing the addresses
                   of x + 2 and x + 3.
----------------------------------------------------------------------------
  char *argv[8];      cout << argv[2];

pointer notation:  cout << *(argv + 2);     
       semantics:  Prints out the data of the 2nd index after argv[0],
                   which is obtained by dereferencing the address of
                   argv + 2 with (*) (adding ints to arrays returns 
                   addresses).
----------------------------------------------------------------------------
  int x[8];           &x[10] - &x[3];
 
pointer notation:  7;    
       semantics:  subtract the location of the 10th index from the 3rd,
                   resulting in the distance between both address points.
                   Initially written as (x+10) - (x+3), but x's are cancelled
                   to return 10 - 3, which we may further simplify to 7.
----------------------------------------------------------------------------
  main's argv;        argv++[0];

pointer notation:  *argv++; 
       semantics:  Prints out data at arg[0], then increments pointer to
                   point to next place in array - in this case, the beginning
                   of the next argument.
---------------------------------------------------------------------------
  main's argv;        argv[0]++;

pointer notation:  *argv = *argv + 1;
       semantics:  Increments the pointer to char of argv[0] by 1,
                   so next time argv[0] is called, the 0th char is
                   of the first argument is omitted (i.e. /a.o instead 
                   of ./a.o)
----------------------------------------------------------------------------
  main's argv;        ++argv[0];

pointer notation:  ++*argv;
       semantics:  Increments the pointer to chars of first argument, 
                   then returns the incremented value.
----------------------------------------------------------------------------
  main's argv;        ++argv[0][2];

pointer notation:  ++*(*argv + 2);  
       semantics:  Dereferences argv to obtain pointer to first argument. 
                   Increments the value of pointer by 2 to return address of 
                   second char in first argument. Dereferences that pointer
                   to obtain value of argv[0][2]. Increments char,such that:
                   if argv being passed as "./a.o 1 2", argv[0][2] or
                   *(*argv + 2) refers to the 'a' char, incrementing 'a' to
                   'b'.
----------------------------------------------------------------------------
